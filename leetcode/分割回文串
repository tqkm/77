给定一个字符串 s，将 s 分割成一些子串，使每个子串都是回文串。

返回 s 所有可能的分割方案。

示例:

输入: "aab"
输出:
[
  ["aa","b"],
  ["a","a","b"]
]

class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> list = new ArrayList<>();
        List<String> l = new ArrayList<>();
        add(list,l,0,s);
        return list;
    }
    
    private void add(List<List<String>> list,List<String> l, int index, String s){
        if(index == s.length()){
            list.add(new ArrayList<>(l));
            return;
        }
        for(int i = index;i < s.length();i++){
            String str = s.substring(index, i + 1);
            if(isPalindrome(str)){
                l.add(str);
                add(list,l,i + 1,s);
                l.remove(l.size() - 1);
            }
        }
    }
    
    private boolean isPalindrome(String s){
        for(int i = 0;i < s.length() / 2;i++){
            if(s.charAt(i) != s.charAt(s.length() - 1 - i))
                return false;
        }
        return true;
    }
}
