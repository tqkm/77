给定两个二进制字符串，返回他们的和（用二进制表示）。
输入为非空字符串且只包含数字 1 和 0。

示例 1:
输入: a = "11", b = "1"
输出: "100"

示例 2:
输入: a = "1010", b = "1011"
输出: "10101"

class Solution {
    public String addBinary(String a, String b) {
        int l1 = a.length() - 1;
        int l2 = b.length() - 1;
        int carry = 0;
        StringBuilder sb = new StringBuilder();
        while(l1 >= 0 || l2 >= 0 || carry > 0){
            int c1 = l1 >= 0 ? a.charAt(l1) - '0' : -1;
            int c2 = l2 >= 0 ? b.charAt(l2) - '0' : -1;
            int num;
            if(c1 >= 0 && c2 >= 0){
                num = c1 + c2 + carry;
            }else if(c1 >= 0){
                num = c1 + carry;
            }else if(c2 >= 0){
                num = c2 + carry;
            }else{
                num = carry;
            }                
            if(num == 0){
                carry = 0;
                sb.append(0);
            }else if(num == 1){
                carry = 0;
                sb.append(1);
            }else if(num == 2){
                carry = 1;
                sb.append(0);
            }else{
                carry = 1;
                sb.append(1);
            }
            l1--;
            l2--;
        }
        return sb.reverse().toString();
    }
}
