一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。
如果可以变为 1，那么这个数就是快乐数。
输入: 19
输出: true
解释: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1

当一个数不是快乐数，可能陷入无限循环当中，所以用一个set将已经添加过的数标记出来，若是将添加过的数再次添加，那么该数一定不是快乐数

class Solution {
    public boolean isHappy(int n) {
        Set<Integer> s = new HashSet<>();        
        while(n != 1 && s.add(n)){
            int sum = 0;
            while(n != 0){
                sum += Math.pow(n % 10,2);
                n = n / 10;
            }
            n = sum;
        }
        return n == 1;
    }
}
