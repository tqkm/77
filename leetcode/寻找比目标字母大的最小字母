给定一个只包含小写字母的有序数组letters 和一个目标字母 target，寻找有序数组里面比目标字母大的最小字母。

数组里字母的顺序是循环的。举个例子，如果目标字母target = 'z' 并且有序数组为 letters = ['a', 'b']，则答案返回 'a'。

示例:

输入:
letters = ["c", "f", "j"]
target = "a"
输出: "c"

输入:
letters = ["c", "f", "j"]
target = "c"
输出: "f"

输入:
letters = ["c", "f", "j"]
target = "d"
输出: "f"

输入:
letters = ["c", "f", "j"]
target = "g"
输出: "j"

输入:
letters = ["c", "f", "j"]
target = "j"
输出: "c"

输入:
letters = ["c", "f", "j"]
target = "k"
输出: "c"

class Solution {
    public char nextGreatestLetter(char[] letters, char target) {
        int s = 0,e = letters.length - 1;
        while(s <= e){
            int mid = (s + e) >> 1;
            if(letters[mid] <= target){
                s = mid + 1;
            }else {
                e = mid - 1;
            }
        }
        if(s == letters.length)
            return letters[0];
        /*if(letters[s] == target){
            if(s == letters.length - 1)
                return letters[0];
            return letters[s + 1];
        }*/
        return letters[s];
    }
}
