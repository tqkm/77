设计一个支持 push，pop，top 操作，并能在常数时间内检索到最小元素的栈。

push(x) -- 将元素 x 推入栈中。
pop() -- 删除栈顶的元素。
top() -- 获取栈顶元素。
getMin() -- 检索栈中的最小元素。
示例:

MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --> 返回 -3.
minStack.pop();
minStack.top();      --> 返回 0.
minStack.getMin();   --> 返回 -2.

class MinStack {

    public Stack<Integer> s;
    public Stack<Integer> minS;

    /** initialize your data structure here. */
    public MinStack() {
        s = new Stack<>();
        minS = new Stack<>();
    }

    public void push(int x) {
        s.push(x);
        if (s.size() - 1 == 0){
            minS.push(x);
        }else {
            if (minS.peek() >= x)
                minS.push(x);
        }
    }

    public void pop() {
        Integer pop = s.pop();
        if (pop.equals(minS.peek()))
            minS.pop();
    }

    public int top() {
        return s.peek();
    }

    public int getMin() {
        return minS.peek();
    }
}
