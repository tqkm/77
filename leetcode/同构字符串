给定两个字符串 s 和 t，判断它们是否是同构的。
如果 s 中的字符可以被替换得到 t ，那么这两个字符串是同构的。
所有出现的字符都必须用另一个字符替换，同时保留字符的顺序。两个字符不能映射到同一个字符上，但字符可以映射自己本身。

示例 1:

输入: s = "egg", t = "add"
输出: true
示例 2:

输入: s = "foo", t = "bar"
输出: false
示例 3:

输入: s = "paper", t = "title"
输出: true
说明:
你可以假设 s 和 t 具有相同的长度。

利用桶排序的思想（hashmap也可以，把数组换成hashmap即可，思路相同），记录相同字符中最后一个字符的下标，进行比较，不是同构的话，下标一定不同

class Solution {
    public boolean isIsomorphic(String s, String t) {
        int[] arr1 = new int[128];
        int[] arr2 = new int[128];
        for(int i = 0;i < s.length();i++){
            arr1[s.charAt(i)] = i;
            arr2[t.charAt(i)] = i;
        }
        for(int i = 0;i < s.length();i++){
            if(arr1[s.charAt(i)] != arr2[t.charAt(i)])
                return false;
        }
        return true;
    }
}
