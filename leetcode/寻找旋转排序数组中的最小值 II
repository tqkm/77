假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。

请找出其中最小的元素。

注意数组中可能存在重复的元素。

示例 1：

输入: [1,3,5]
输出: 1
示例 2：

输入: [2,2,2,0,1]
输出: 0

class Solution {
    public int findMin(int[] nums) {
        int s = 0,e = nums.length - 1;        
        while(e >= 0 && nums[s] == nums[e])
            e--;
        if(e >= 0 && nums[s] < nums[e])
            return nums[0];
        while(s < e){
            int mid = (s + e) >> 1;
            if(nums[mid] > nums[mid +1]){
                return nums[mid + 1];
            }else if(nums[s] > nums[mid]){
                e = mid;
            }else {
                s = mid + 1;
            }
        }
        return nums[s];
    }
}
/*若是[3,3,4,4,5,5,1,1,2,2]原来的算法足以解决,
  若是[3,1,3]这种不是最小数旋转成这种形式，根据原来的算法，从后往前将多余的3删除，即移动e的下标
  若是[1,3,1]这种最小数旋转成这种形式,移动下标后边检查nums[i]是否小于nums[e]即可
  若是一个数，注意不要下标越界
*/
