/**
  输入: ["2", "1", "+", "3", "*"]
  输出: 9
  解释: ((2 + 1) * 3) = 9
  输入: ["4", "13", "5", "/", "+"]
  输出: 6
  解释: (4 + (13 / 5)) = 6
**/

class Solution {
    public int evalRPN(String[] tokens) {
        
        Stack<String> stack = new Stack<>();
        int result = 0;
        for (int i=0;i<tokens.length;i++){
            if (tokens[i].equals("+")){
                result = Integer.parseInt(stack.pop()) + Integer.parseInt(stack.pop());
                stack.push(result+"");
            }else if (tokens[i].equals("-")){
                int i1 = Integer.parseInt(stack.pop());
                int i2 = Integer.parseInt(stack.pop());
                result = i2 - i1;
                stack.push(result + "");
            }else if (tokens[i].equals("*")){
                result = Integer.parseInt(stack.pop()) * Integer.parseInt(stack.pop());
                stack.push(result+"");
            }else if (tokens[i].equals("/")) {
                int i1 = Integer.parseInt(stack.pop());
                int i2 = Integer.parseInt(stack.pop());
                result = i2 / i1;
                stack.push(result + "");
            }else {
                stack.push(tokens[i]);
            }
        }
        return Integer.parseInt(stack.pop());
    }
}
