给定一个整数类型的数组 nums，请编写一个能够返回数组“中心索引”的方法。

我们是这样定义数组中心索引的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。

如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近左边的那一个。

输入: 
nums = [1, 7, 3, 6, 5, 6]
输出: 3
解释: 
索引3 (nums[3] = 6) 的左侧数之和(1 + 7 + 3 = 11)，与右侧数之和(5 + 6 = 11)相等。
同时, 3 也是第一个符合要求的中心索引。

设定两个整数sum1，sum2，分别代表当坐标为1时，左侧和右侧数之和，因此数组长度为0或1时要单独拿出计算；每移动一次指针，sum1便累加，sum2累减，
注意当指针移动到nums.length-1时，让sum2为0，否则会数组下标越界

class Solution {
    public int pivotIndex(int[] nums) {
        if(nums.length == 0)
            return -1;
        if(nums.length == 1)
            return 0;
        int sum1 = 0;
        int sum2 = 0;
        int k = 0;
        for(int i = 1;i < nums.length;i++){
            sum2 += nums[i];
        }
        while(k < nums.length){
            if(sum1 == sum2)
                return k;
            sum1 += nums[k];
            if(k == nums.length - 1){
                sum2 = 0;
                k++;
            }else{
                sum2 -= nums[++k]; 
                 
        }
        return -1;
    }
}
